"addVo()",
"addEMA(20)",
"addEMA(10, col = 2)"))
# To weekly frequency from daily
sp500_weekly = to.weekly(SPX)
head(sp500_weekly, n =6)
#interactive chart
SPX_dy = SPX[ ,c(1:3,6)]
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
SPX_dy = SPX_dy[-c(1:14),]
p = dygraph(SPX_dy, xlab = "Date", ylab = "Price", main = "SPY Price") %>%
dySeries("SPX.Open", label = "Open", color = "black") %>%
dySeries("SPX.Low", label = "Low", color = "blue") %>%
dySeries("SPX.High", label = "High", color = "purple") %>%
dySeries("SPX.Adjusted", label = "Close", color = "black") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed") %>%
dyRangeSelector() %>%
dyCandlestick()%>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = T)  %>%
dyRoller(rollPeriod = 1)
p
#Bollinger Bands Data frame
SPX_dya = SPX_dy
SPX_dya$sd = rollapply(SPX_dya$SMA15, width = 15, FUN = sd) #15SMA Standard Deviation
SPX_dya = SPX_dya[-c(1:14),]
SPX_dya$b.lower = SPX_dya$SMA15 - SPX_dya$sd*2#bollinger lower band
SPX_dya$b.upper = SPX_dya$SMA15 + SPX_dya$sd*2#bollinger upper band
SPX_dya = SPX_dya[,c(4,5,7,8)]
#Bollinger Graph
q = dygraph(SPX_dya, xlab = "Date", ylab = "Price", main = "SPY Price and Bollinger Band") %>%
dySeries("SPX.Adjusted", label = "Close", color = "darkgreen") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed")%>%
dySeries(c("b.lower", "SMA15" , "b.upper"),strokePattern = "dashed") %>%
dyRangeSelector()
q
# sp500_returns using adj.close
sp500_returns = Return.calculate(sp500_weekly[,6])
sp500_returns = sp500_returns[-1,]
plot.zoo(sp500_returns)
# Returns table
table.CalendarReturns(sp500_returns)
# Arith mean of returns
mean(sp500_returns)
# Geometric mean of returns
mean.geometric(sp500_returns)
# Standard deviation
sd(sp500_returns)
View(q)
View(p)
View(q)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
# Plot the data
a = chartSeries(SPX,
theme = theme_project,
name = "S&P 500 Charting",
TA = list("addBBands(n = 15)",
"addVo()",
"addEMA(20)",
"addEMA(10, col = 2)"))
#interactive chart
SPX_dy = SPX[ ,c(1:3,6)]
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
SPX_dy = SPX_dy[-c(1:14),]
p = dygraph(SPX_dy, xlab = "Date", ylab = "Price", main = "SPY Price") %>%
dySeries("SPX.Open", label = "Open", color = "black") %>%
dySeries("SPX.Low", label = "Low", color = "blue") %>%
dySeries("SPX.High", label = "High", color = "purple") %>%
dySeries("SPX.Adjusted", label = "Close", color = "black") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed") %>%
dyRangeSelector() %>%
dyCandlestick()%>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = T)  %>%
dyRoller(rollPeriod = 1)
p
#Bollinger Bands Data frame
SPX_dya = SPX_dy
SPX_dya$sd = rollapply(SPX_dya$SMA15, width = 15, FUN = sd) #15SMA Standard Deviation
SPX_dya = SPX_dya[-c(1:14),]
SPX_dya$b.lower = SPX_dya$SMA15 - SPX_dya$sd*2#bollinger lower band
SPX_dya$b.upper = SPX_dya$SMA15 + SPX_dya$sd*2#bollinger upper band
SPX_dya = SPX_dya[,c(4,5,7,8)]
#Bollinger Graph
q = dygraph(SPX_dya, xlab = "Date", ylab = "Price", main = "SPY Price and Bollinger Band") %>%
dySeries("SPX.Adjusted", label = "Close", color = "darkgreen") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed")%>%
dySeries(c("b.lower", "SMA15" , "b.upper"),strokePattern = "dashed") %>%
dyRangeSelector()
q
# sp500_returns using adj.close
sp500_returns = Return.calculate(sp500_weekly[,6])
sp500_returns = sp500_returns[-1,]
plot.zoo(sp500_returns)
# Returns table
table.CalendarReturns(sp500_returns)
# Arith mean of returns
mean(sp500_returns)
# Geometric mean of returns
mean.geometric(sp500_returns)
# Standard deviation
sd(sp500_returns)
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
#interactive chart
SPX_dy = SPX[ ,c(1:3,6)]
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
SPX_dy = SPX_dy[-c(1:14),]
p = dygraph(SPX_dy, xlab = "Date", ylab = "Price", main = "SPY Price") %>%
dySeries("SPX.Open", label = "Open", color = "black") %>%
dySeries("SPX.Low", label = "Low", color = "blue") %>%
dySeries("SPX.High", label = "High", color = "purple") %>%
dySeries("SPX.Adjusted", label = "Close", color = "black") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed") %>%
dyRangeSelector() %>%
dyCandlestick()%>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = T)  %>%
dyRoller(rollPeriod = 1)
p
#Bollinger Bands Data frame
SPX_dya = SPX_dy
SPX_dya$sd = rollapply(SPX_dya$SMA15, width = 15, FUN = sd) #15SMA Standard Deviation
SPX_dya = SPX_dya[-c(1:14),]
SPX_dya$b.lower = SPX_dya$SMA15 - SPX_dya$sd*2#bollinger lower band
SPX_dya$b.upper = SPX_dya$SMA15 + SPX_dya$sd*2#bollinger upper band
SPX_dya = SPX_dya[,c(4,5,7,8)]
#Bollinger Graph
q = dygraph(SPX_dya, xlab = "Date", ylab = "Price", main = "SPY Price and Bollinger Band") %>%
dySeries("SPX.Adjusted", label = "Close", color = "darkgreen") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed")%>%
dySeries(c("b.lower", "SMA15" , "b.upper"),strokePattern = "dashed") %>%
dyRangeSelector()
q
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
?dygraphs
?dygraph
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
#interactive chart
SPX_dy = SPX[ ,c(1:3,6)]
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
SPX_dy = SPX_dy[-c(1:14),]
p = dygraph(SPX_dy, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Open", label = "Open", color = "black") %>%
dySeries("SPX.Low", label = "Low", color = "blue") %>%
dySeries("SPX.High", label = "High", color = "purple") %>%
dySeries("SPX.Adjusted", label = "Close", color = "black") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed") %>%
dyRangeSelector() %>%
dyCandlestick()%>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = T)  %>%
dyRoller(rollPeriod = 1)
p
#Bollinger Bands Data frame
SPX_dya = SPX_dy
SPX_dya$sd = rollapply(SPX_dya$SMA15, width = 15, FUN = sd) #15SMA Standard Deviation
SPX_dya = SPX_dya[-c(1:14),]
SPX_dya$b.lower = SPX_dya$SMA15 - SPX_dya$sd*2#bollinger lower band
SPX_dya$b.upper = SPX_dya$SMA15 + SPX_dya$sd*2#bollinger upper band
SPX_dya = SPX_dya[,c(4,5,7,8)]
#Bollinger Graph
q = dygraph(SPX_dya, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Adjusted", label = "Close", color = "darkgreen") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed")%>%
dySeries(c("b.lower", "SMA15" , "b.upper"),strokePattern = "dashed") %>%
dyRangeSelector()
q
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
#interactive chart
SPX_dy = SPX[ ,c(1:3,6)]
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
SPX_dy = SPX_dy[-c(1:14),]
p = dygraph(SPX_dy, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Open", label = "Open", color = "black") %>%
dySeries("SPX.Low", label = "Low", color = "blue") %>%
dySeries("SPX.High", label = "High", color = "purple") %>%
dySeries("SPX.Adjusted", label = "Close", color = "black") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed") %>%
dyRangeSelector() %>%
dyCandlestick()%>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = T)  %>%
dyRoller(rollPeriod = 1)
p
#Bollinger Bands Data frame
SPX_dya = SPX_dy
SPX_dya$sd = rollapply(SPX_dya$SMA15, width = 15, FUN = sd) #15SMA Standard Deviation
SPX_dya = SPX_dya[-c(1:14),]
SPX_dya$b.lower = SPX_dya$SMA15 - SPX_dya$sd*2#bollinger lower band
SPX_dya$b.upper = SPX_dya$SMA15 + SPX_dya$sd*2#bollinger upper band
SPX_dya = SPX_dya[,c(4,5,7,8)]
#Bollinger Graph
q = dygraph(SPX_dya, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Adjusted", label = "Close", color = "darkgreen") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed")%>%
dySeries(c("b.lower", "SMA15" , "b.upper"),strokePattern = "dashed") %>%
dyRangeSelector()
q
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
plotobj
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
#interactive chart
SPX_dy = SPX[ ,c(1:3,6)]
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
SPX_dy = SPX_dy[-c(1:14),]
p = dygraph(SPX_dy, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Open", label = "Open", color = "black") %>%
dySeries("SPX.Low", label = "Low", color = "blue") %>%
dySeries("SPX.High", label = "High", color = "purple") %>%
dySeries("SPX.Adjusted", label = "Close", color = "black") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed") %>%
dyRangeSelector() %>%
dyCandlestick()%>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = T)  %>%
dyRoller(rollPeriod = 1)
p
#Bollinger Bands Data frame
SPX_dya = SPX_dy
SPX_dya$sd = rollapply(SPX_dya$SMA15, width = 15, FUN = sd) #15SMA Standard Deviation
SPX_dya = SPX_dya[-c(1:14),]
SPX_dya$b.lower = SPX_dya$SMA15 - SPX_dya$sd*2#bollinger lower band
SPX_dya$b.upper = SPX_dya$SMA15 + SPX_dya$sd*2#bollinger upper band
SPX_dya = SPX_dya[,c(4,5,7,8)]
#Bollinger Graph
q = dygraph(SPX_dya, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Adjusted", label = "Close", color = "darkgreen") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed")%>%
dySeries(c("b.lower", "SMA15" , "b.upper"),strokePattern = "dashed") %>%
dyRangeSelector()
q
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
#interactive chart
SPX_dy = SPX[ ,c(1:3,6)]
#create bollinger bands
SPX_dy$SMA15 = SMA(Cl(SPX), n = 15) #Moving Average
SPX_dy = SPX_dy[-c(1:14),]
p = dygraph(SPX_dy, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Open", label = "Open", color = "black") %>%
dySeries("SPX.Low", label = "Low", color = "blue") %>%
dySeries("SPX.High", label = "High", color = "purple") %>%
dySeries("SPX.Adjusted", label = "Close", color = "black") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed") %>%
dyRangeSelector() %>%
dyCandlestick()%>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = T)
p
#Bollinger Bands Data frame
SPX_dya = SPX_dy
SPX_dya$sd = rollapply(SPX_dya$SMA15, width = 15, FUN = sd) #15SMA Standard Deviation
SPX_dya = SPX_dya[-c(1:14),]
SPX_dya$b.lower = SPX_dya$SMA15 - SPX_dya$sd*2#bollinger lower band
SPX_dya$b.upper = SPX_dya$SMA15 + SPX_dya$sd*2#bollinger upper band
SPX_dya = SPX_dya[,c(4,5,7,8)]
#Bollinger Graph
q = dygraph(SPX_dya, xlab = "Date", ylab = "Price") %>%
dySeries("SPX.Adjusted", label = "Close", color = "darkgreen") %>%
dySeries("SMA15", label = "SMA15", color = "orange", strokePattern = "dashed")%>%
dySeries(c("b.lower", "SMA15" , "b.upper"),strokePattern = "dashed") %>%
dyRangeSelector()
q
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
object =write_json(plotobj, "path.json", auto_unbox=T)
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
library(jsonlite)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
object =write_json(plotobj, "path.json", auto_unbox=T)
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
library(jsonlite)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
obj = save_html(plotobj)
obj = saveWidget(plotobj)
?saveWidget
obj = saveWidget(plotobj,"C:\Users\bacht\OneDrive\Documents\GitHub\port_management")
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
obj = saveWidget(plotobj,"C:/Users/bacht/OneDrive/Documents/GitHub/port_management")
obj = saveWidget(plotobj,"Users/bacht/OneDrive/Documents/GitHub/port_management")
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
obj = saveWidget(plotobj,"obj")
obj = saveWidget(plotobj,obj)
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
obj = saveWidget(
widget,
file,
selfcontained = TRUE,
libdir = NULL,
background = "transparent",
title = class(widget)[[1]],
knitrOptions = list()
)
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
obj = saveWidget(
plotobj,
file,
selfcontained = TRUE,
libdir = NULL,
background = "transparent",
title = class(widget)[[1]],
knitrOptions = list()
)
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
obj = saveWidget(
plotobj,
file = 'test_heatmap.html',
selfcontained = TRUE,
libdir = NULL,
background = "transparent",
title = class(widget)[[1]],
knitrOptions = list()
)
?browsable
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
save_html(plotobj, "SP data")
library(dplyr)
library(htmlwidgets)
library(PerformanceAnalytics)
library(xts)
library(quantmod)
library(ggplot2)
library(lubridate)
library(dygraphs)
library(jsonlite)
library(htmltools)
#theme of the graphs
theme_project = chartTheme("white", bg.collbackground ="transparent")
#sp500
start = Sys.Date() - days(360)
end = Sys.Date()-2
getSymbols("^SPX", src = "yahoo",from = start, to = end)
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
save_html(plotobj, "SP data")
# create a list of dygraphs objects
plotobj <- list(p,q)
# render the dygraphs objects using htmltools
htmltools::browsable(htmltools::tagList(plotobj))
save_html(plotobj, "SPdata.html")
?dyOptions
View(SPX)
